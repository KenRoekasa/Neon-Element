@startuml

title __MODEL's Class Diagram__\n

  package  {
    package engine.model {
      class AttackTimes {
          {static} + getActionTime()
      }
    }
  }
  

  package  {
    package engine.model {
      abstract class GameState {
          # objects : ArrayList<PhysicsObject>
          # startTime : long
          # allPlayers : ArrayList<Player>
          - isRunning : boolean
          - deadPlayers : LinkedBlockingQueue
          + GameState()
          + getScoreBoard()
          + getGameType()
          + setGameType()
          + getDeadPlayers()
          + getMap()
          + setMap()
          + getObjects()
          + setObjects()
          + getStartTime()
          + setStartTime()
          + getAllPlayers()
          + getOtherPlayers()
          + getOtherObjects()
          + start()
          + stop()
          + getRunning()
          + getAiConMan()
      }
    }
  }
  

  package  {
    package engine.model {
      abstract class GameType {
          + GameType()
          + getType()
      }
    }
  }
  

  package  {
    package engine.model {
      enum Type {
        FirstToXKills
        Timed
        Hill
        Regicide
        id
      }
    }
  }
  

  package  {
    package engine.model {
      class Map {
          - ground : Rectangle
          - walls : ArrayList<Wall>
          - respawnPoints : ArrayList<Point2D>
          + Map()
          + getGround()
          + getWalls()
          + getRespawnPoints()
      }
    }
  }
  

  package  {
    package engine.model {
      class Score {
          - score : int
          - kills : int
          - deaths : int
          + getScore()
          + setScore()
          + getDeaths()
          + setDeaths()
          + getKills()
          + setKills()
      }
    }
  }
  

  package  {
    package engine.model {
      class ScoreBoard {
          - board : HashMap<Integer, Score>
          - totalScore : int
          - leaderBoard : ArrayList<Integer>
          + ScoreBoard()
          + getLeaderBoard()
          + initialise()
          + addKill()
          + addScore()
          - updateLeaderBoard()
          + getPlayerKills()
          + getPlayerScore()
          + getPlayerDeaths()
          + getTotalKills()
          + toString()
      }
    }
  }
  

  GameState o-- Map : map
  GameState o-- GameType : gameType
  GameState o-- ScoreBoard : scoreBoard
  GameState o-- AiControllersManager : aiConMan
  GameType o-- Type : type
  GameType +-down- Type


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
